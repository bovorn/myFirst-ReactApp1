{"version":3,"sources":["components/Todo.js","components/CardList.js","components/ErrorBoundry.js","components/SearchBox.js","components/Scroll.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["todo","title","completed","style","textDecoration","cardList","todos","map","i","key","id","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","SearchBox","onSearchChange","className","type","placeholder","onChange","Scroll","overflow","border","height","maxWidth","margin","App","requestTodos","searchField","isPending","filteredTodo","filter","toLowerCase","includes","ErrorBoundry","connect","searchTodos","dispatch","event","payload","target","value","a","fetch","then","response","json","data","catch","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateTodos","logger","createLogger","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6fa3de0e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function todo({ title, completed }) {\r\n    return (\r\n        <li style={{textDecoration: completed ? 'line-through' : 'none'}}>{title}</li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport default function cardList({ todos }) {\r\n    return (\r\n        <ul>\r\n            {\r\n                todos.map( (todo, i) => { \r\n                   return <Todo key={todos[i].id} title={todos[i].title} completed={todos[i].completed}/>;\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react'\r\n\r\nexport default function SearchBox({ onSearchChange }) {\r\n    return (\r\n        <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search..'\r\n        onChange={onSearchChange}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px', maxWidth: '1200px', margin: 'auto'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, fetchTodos } from '../actions';\n\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchTodos.searchField, \n    todos : state.requestTodos.todos,\n    isPending : state.requestTodos.isPending,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n      requestTodos: () => dispatch(fetchTodos())\n    }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.requestTodos();\n  }\n\n  render() {\n    const { searchField , onSearchChange ,todos , isPending} = this.props;\n    const filteredTodo = todos.filter(todo => { return todo.title.toLowerCase().includes(searchField.toLowerCase())});\n    return isPending ? <h1>Loading...</h1> :\n     (\n       <div>\n        <div className=\"tc\">\n        <SearchBox onSearchChange={onSearchChange} />\n        </div>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList todos={filteredTodo} />\n          </ErrorBoundry>\n        </Scroll>\n        </div>\n      );\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n    CHANGE_SEARCHFIELD,\r\n    REQUEST_TODOS_PENDING,\r\n    REQUEST_TODOS_SUCCESS,\r\n    REQUEST_TODOS_FAILED\r\n   } from './constants'\r\n  \r\n  \r\n  export const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\r\n\r\n  export const fetchTodos = () => async (dispatch) => {\r\n      dispatch({ type: REQUEST_TODOS_PENDING });\r\n      fetch('https://jsonplaceholder.typicode.com/todos').then((response) => {return response.json()})\r\n        .then(data => dispatch({ type: REQUEST_TODOS_SUCCESS , payload: data}))\r\n        .catch( err => dispatch({ type: REQUEST_TODOS_FAILED , payload: err}));\r\n  }","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_TODOS_PENDING = 'REQUEST_TODOS_PENDING';\r\nexport const REQUEST_TODOS_SUCCESS = 'REQUEST_TODOS_SUCCESS';\r\nexport const REQUEST_TODOS_FAILED = 'REQUEST_TODOS_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    CHANGE_SEARCHFIELD,\r\n    REQUEST_TODOS_SUCCESS,\r\n    REQUEST_TODOS_PENDING,\r\n    REQUEST_TODOS_FAILED\r\n   } from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchTodos = (state=initialStateSearch, action={}) => {\r\n    switch (action.type) {\r\n      case CHANGE_SEARCHFIELD:\r\n        return Object.assign({}, state, {searchField: action.payload})\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nconst initialStateTodos = {\r\n    todos: [],\r\n    isPending: true\r\n}\r\n\r\n\r\nexport const requestTodos = (state=initialStateTodos, action={}) => {\r\n    switch (action.type) {\r\n      case REQUEST_TODOS_PENDING:\r\n        return Object.assign({}, state, {isPending : true})\r\n      case REQUEST_TODOS_SUCCESS:\r\n        return Object.assign({}, state, {todos: action.payload , isPending : false})\r\n      case REQUEST_TODOS_FAILED:\r\n        return Object.assign({}, state, {error: action.payload})\r\n      default:\r\n        return state\r\n    }\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\nimport { Provider } from 'react-redux';\nimport { searchTodos , requestTodos } from './reducers'\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({ searchTodos , requestTodos})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}