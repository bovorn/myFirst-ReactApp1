{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/SearchBox.js","components/Scroll.js","components/Loading.js","containers/App.js","actions.js","constants.js","api/api.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","SearchBox","onSearchChange","aria-label","style","width","height","maxWidth","type","placeholder","onChange","Scroll","overflowX","overflowY","isPending","border","margin","loading","display","justifyContent","alignItems","backgroundColor","Loading","color","xmlns","viewBox","fill","transform","d","attributeName","values","dur","begin","repeatCount","keyTimes","keySplines","calcMode","opacity","App","onRequestRobots","searchField","filteredRobots","filter","robot","toLowerCase","includes","searchChange","ErrorBoundry","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","a","link","fetch","then","response","json","data","catch","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateRobots","rootReducers","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d533a0e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Card({ name, email, id }) {\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nexport default function CardList({ robots }) {\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n            return (\r\n                <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n                />\r\n            );\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","import React , { Component } from 'react'\r\n\r\nconst SearchBox = ({ onSearchChange }) =>  {\r\n    return (\r\n        <input\r\n        aria-label=\"Search Robot\"\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        style={{width: '400px', height: '30px' , maxWidth: '400px'}}\r\n        type='search'\r\n        placeholder='Search...'\r\n        onChange={onSearchChange}\r\n        />\r\n    );\r\n} \r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  const { isPending } = props;\r\n  const style={\r\n    Scroll: { \r\n      overflowX: 'hide', \r\n      overflowY: isPending ? 'hide' : 'scroll',\r\n      border: '5px solid rgb(0, 88, 88)', \r\n      height: '550px', \r\n      maxWidth: '1200px', \r\n      margin: '20px auto'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.Scroll}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Scroll;","import React from 'react'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"w-100 tc\" style={style.loading}>\r\n            <div>\r\n                <h4 style={{color: 'red'}}>LOADING</h4>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"red\">\r\n                    <path transform=\"translate(0 0)\" d=\"M0 12 V20 H4 V12z\">\r\n                    <animateTransform attributeName=\"transform\" type=\"translate\" values=\"0 0; 28 0; 0 0; 0 0\" dur=\"1.5s\" begin=\"0\" repeatCount=\"indefinite\" keyTimes=\"0;0.3;0.6;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\" />\r\n                    </path>\r\n                    <path opacity=\"0.5\" transform=\"translate(0 0)\" d=\"M0 12 V20 H4 V12z\">\r\n                    <animateTransform attributeName=\"transform\" type=\"translate\" values=\"0 0; 28 0; 0 0; 0 0\" dur=\"1.5s\" begin=\"0.1s\" repeatCount=\"indefinite\" keyTimes=\"0;0.3;0.6;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\" />\r\n                    </path>\r\n                    <path opacity=\"0.25\" transform=\"translate(0 0)\" d=\"M0 12 V20 H4 V12z\">\r\n                    <animateTransform attributeName=\"transform\" type=\"translate\" values=\"0 0; 28 0; 0 0; 0 0\" dur=\"1.5s\" begin=\"0.2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.3;0.6;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\" calcMode=\"spline\" />\r\n                    </path>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    loading: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0,0,0,0.5)',\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\n\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport Loading from '../components/Loading';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll isPending={isPending}>\n          { isPending ? <Loading /> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n    CHANGE_SEARCHFIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n   } from './constants';\r\n\r\nimport { apiCall } from './api/api'\r\n  \r\n  \r\n  export const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\r\n\r\n  export const requestRobots = () => async (dispatch) => {\r\n      dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n      apiCall('https://jsonplaceholder.typicode.com/users')\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS , payload: data}))\r\n        .catch( err => dispatch({ type: REQUEST_ROBOTS_FAILED , payload: err}));\r\n  }","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","export const apiCall = (link) =>\r\n  fetch(link).then(response => response.json())","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    CHANGE_SEARCHFIELD,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_FAILED\r\n   } from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    switch (action.type) {\r\n      case CHANGE_SEARCHFIELD:\r\n        return Object.assign({}, state, {searchField: action.payload})\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n  robots: [],\r\n  isPending: true\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\nimport { Provider } from 'react-redux';\nimport { requestRobots, searchRobots } from './reducers'\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({ searchRobots , requestRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}